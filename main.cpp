#include <iostream>
#include <stdlib.h>
#include <time.h>
#include <vector>
#include <Windows.h>
#include <conio.h>
#include <iomanip>

using namespace std;
string ussernameinput;
vector<string> ussername;
int menit = 0, jam = 0, detik = 0;
int key = 0;
int Letak_X_easy = 5;
int Letak_Y_easy = 3;

void border_minesweeper_easy() {
	system("cls");
	char border_easy[8][20]{
		{'+','+','+','+','+','+','+','+','+','+',' ',' ','T','I','M','E',':',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',':',' ',' ',':',' '},
		{'+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','q','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	};



	do {
		detik++;
		if (detik >= 60) {
			detik = 0;
			menit++;
			if (menit == 60) {
				menit = 0;

				jam++;
				if (jam == 24) {
					jam = 0;
				}
			}
		}
		border_easy[1][12] = '0' + jam / 10; // puluhan jam
		border_easy[1][13] = '0' + jam % 10; // satuan jam
		border_easy[1][15] = '0' + menit / 10; // puluhan menit
		border_easy[1][16] = '0' + menit % 10; // satuan menit
		border_easy[1][18] = '0' + detik / 10; // puluhan detik
		border_easy[1][19] = '0' + detik % 10; // satuan detik

		system("cls");
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j < 20; j++) {
				cout << border_easy[i][j];
			}
			cout << endl;
		}

		if (_kbhit()) {
			char tombolgerak = _getch();
			if (tombolgerak == 'a') {
				if (border_easy[Letak_Y_easy][Letak_X_easy - 1] == '+') {
					border_easy[Letak_Y_easy][Letak_X_easy - 1] = 'q';
					border_easy[Letak_Y_easy][Letak_X_easy] = '+';
					Letak_X_easy--;
					Sleep(1);
				}
			}
			else if (tombolgerak == 'd') {
				if (border_easy[Letak_Y_easy][Letak_X_easy + 1] == '+') {
					border_easy[Letak_Y_easy][Letak_X_easy + 1] = 'q';
					border_easy[Letak_Y_easy][Letak_X_easy] = '+';
					Letak_X_easy++;
				}
			}
			else if (tombolgerak == 'w') {
				if (border_easy[Letak_Y_easy - 1][Letak_X_easy] == '+') {
					border_easy[Letak_Y_easy - 1][Letak_X_easy] = 'q';
					border_easy[Letak_Y_easy][Letak_X_easy] = '+';
					Letak_Y_easy--;
				}
			}
			else if (tombolgerak == 's') {
				if (border_easy[Letak_Y_easy + 1][Letak_X_easy] == '+') {
					border_easy[Letak_Y_easy + 1][Letak_X_easy] = 'q';
					border_easy[Letak_Y_easy][Letak_X_easy] = '+';
					Letak_Y_easy++;
				}
			}
			else if (tombolgerak == '\r') {
					border_easy[Letak_Y_easy][Letak_X_easy] = ' ';
			}
		}

		Sleep(1);
	} while (true);
}


void border_minesweeper_medium() {

	system("cls");
	char border_medium[14][28] = {
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ','T','I','M','E',':',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',':',' ',' ',':',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
	{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '}
	};

	do {
		detik++;
		if (detik >= 60) {
			detik = 0;
			menit++;
			if (menit == 60) {
				menit = 0;

				jam++;
				if (jam == 24) {
					jam = 0;
				}
			}
		}
		border_medium[1][20] = '0' + jam / 10; // puluhan jam
		border_medium[1][21] = '0' + jam % 10; // satuan jam
		border_medium[1][23] = '0' + menit / 10; // puluhan menit
		border_medium[1][24] = '0' + menit % 10; // satuan menit
		border_medium[1][26] = '0' + detik / 10; // puluhan detik
		border_medium[1][27] = '0' + detik % 10; // satuan detik

		system("cls");
		for (int i = 0; i < 14; i++) {
			for (int j = 0; j < 28; j++) {
				cout << border_medium[i][j];
			}
			cout << endl;
		}

		Sleep(1000);
	} while (key != 27);

}

void border_minesweeper_hard() {

	system("cls");
	char border_hard[20][34]{

		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ','T','I','M','E',':',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',':',' ',' ',':',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},
		{'+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' '},

	};

	do {
		detik++;
		if (detik >= 60) {
			detik = 0;
			menit++;
			if (menit == 60) {
				menit = 0;

				jam++;
				if (jam == 24) {
					jam = 0;
				}
			}
		}
		border_hard[1][26] = '0' + jam / 10; // puluhan jam
		border_hard[1][27] = '0' + jam % 10; // satuan jam
		border_hard[1][29] = '0' + menit / 10; // puluhan menit
		border_hard[1][30] = '0' + menit % 10; // satuan menit
		border_hard[1][32] = '0' + detik / 10; // puluhan detik
		border_hard[1][33] = '0' + detik % 10; // satuan detik

		system("cls");
		for (int i = 0; i < 20; i++) {
			for (int j = 0; j < 34; j++) {
				cout << border_hard[i][j];
			}
			cout << endl;
		}

		Sleep(1000);
	} while (key != 27);

}






int main() {

	int mode, input;
	int play;
	do {
		cout << "=== Welcome To Game Mine Sweeper === \n";
		cout << "1. Play \n";
		cout << "2. HigScore \n";
		cout << "0. Exit \n";
		cout << ">> ";
		cin >> input;


		if (input == 1) {
			system("cls");
			cout << "=== Mine Sweeper === \n";
			cout << "1. Mode Easy \n";
			cout << "2. Mode Medium \n";
			cout << "3. Mode Hard \n";
			cout << ">> ";
			cin >> mode;
			cout << endl;

			if (mode == 1) {
				cout << "Ussername : ";
				cin >> ussernameinput;
				border_minesweeper_easy();
			}
			else if (mode == 2) {
				cout << "Ussername : ";
				cin >> ussernameinput;
				border_minesweeper_medium();
			}
			else if (mode == 3) {
				cout << "Ussername : ";
				cin >> ussernameinput;
				border_minesweeper_hard();
			}



		}
		else if (input == 2) {
			cout << "=== HighScore === \n";
		}
		else {
			cout << "Sayonara \n";
			break;
		}


	} while (true);

	return 0;
}
